{"version":3,"sources":["pages/p2-registration/ui/Registration.module.css","pages/p1-login/ui/login.module.css","pages/p3-packs/ui/Pack/pack.module.css","pages/p3-cards/card/card.module.css","pages/p5-recoverPassword/recoverPassword.module.css","pages/p9-learnPage/trainPage.module.css","pages/p2-registration/ui/SInp/SInp.module.css","components/SuperComponents/SuperInput/SuperInputText.module.css","pages/p6-newPassword/ui/newPassword.module.css","pages/p2-registration/ui/SBtn/SBtn.module.css","components/SuperComponents/SuperButton/SuperButton.module.css","components/SuperComponents/SuperCheckbox/SuperCheckbox.module.css","pages/p3-profile/profile.module.css","pages/p8-tableFilter/ui/search.module.css","components/preloader/preloader.module.css","components/header/header.module.css","components/Modals/modal.module.css","api/api.ts","pages/p2-registration/bll/registrationReducer.ts","pages/p2-registration/ui/SBtn/SBtn.tsx","pages/p2-registration/ui/SInp/SInp.tsx","components/preloader/PYh.gif","components/preloader/Preloader.tsx","pages/p2-registration/ui/Registration.tsx","components/SuperComponents/SuperInput/SuperInputText.tsx","components/SuperComponents/SuperCheckbox/SuperCheckbox.tsx","components/SuperComponents/SuperButton/SuperButton.tsx","pages/p5-recoverPassword/bll/recoverPasswordReducer.ts","pages/p1-login/bll/loginReducer.ts","pages/p1-login/ui/Login.tsx","pages/p6-newPassword/bll/newPasswordReducer.ts","pages/p6-newPassword/ui/NewPassword.tsx","pages/p3-profile/ui/Profile.tsx","pages/p5-recoverPassword/ui/RecoverPassword.tsx","pages/p4-404/ui/cat_standing_animated.gif","pages/p4-404/ui/Error404.tsx","pages/p8-tableFilter/bll/searchReducer.ts","pages/p3-packs/bll/packsReducer.ts","components/Modals/Modal.tsx","components/Modals/ModalQuestion.tsx","components/Modals/ModalUpdatePack.tsx","pages/p3-packs/ui/Pack/Pack.tsx","pages/p8-tableFilter/ui/MultiRangeSlider/MultiRangeSlider.tsx","pages/p8-tableFilter/ui/SearchTable.tsx","pages/p8-tableFilter/ui/Pagination/Pagination.tsx","pages/p8-tableFilter/ui/SortModule/SortModule.tsx","pages/p3-packs/ui/Packs.tsx","pages/p3-cards/bll/cardsReducer.ts","components/Modals/ModalUpdateCards.tsx","pages/p3-cards/card/Card.tsx","pages/p3-cards/ui/Cards.tsx","components/functions/getRandomCard.ts","pages/p9-learnPage/TrainPage.tsx","components/routes/Routes.tsx","components/header/Header.tsx","components/Modals/ModalUp.tsx","app/App.tsx","reportWebVitals.ts","pages/p3-profile/bll/profileReducer.ts","app/store.ts","index.tsx","pages/p3-packs/ui/table.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","commonAPI","data","post","delete","login","password","email","from","message","newPassword","token","resetPasswordToken","min","max","searchName","page","pageCount","sortProducts","get","length","name","cardsPack","packId","put","_id","question","answer","params","cardsPack_id","cardQuestion","cardAnswer","id","card","cardId","grade","card_id","initialState","confirmPassword","isSuccess","rememberMe","error","loading","errorServer","SET_LOGIN","SET_ERROR","SET_ERR_SERV","SET_PASSWORD","SET_REPEAT_PASSWORD","SET_SUCCESS","SET_LOADING","SET_REMEMBER_ME","actionsRegistrations","type","err","SBtn","callFunction","red","className","restProps","finalClassName","s","default","nameButton","onClick","SInp","onChange","onChangeText","onKeyPress","onEnter","info","spanClassName","onChangeValue","value","finalSpanClassName","finalInputClassName","errorInput","superInput","content","e","currentTarget","key","Preloader","preloader","src","nya","alt","Registration","dispatch","useDispatch","useState","setLogin","setPassword","password2","setPassword2","stateRegistrationIsSuccess","useSelector","state","registration","stateRegistrationError","stateLoading","to","PATH","LOGIN","errInputLogin","errInputPas","errInputPas2","checkInBlock","checkMain","checkInTitle","style","color","help","placeholder","repeatPassword","checkInBtn","then","res","setTimeout","catch","er","console","log","response","finally","createUserTC","disabled","SuperInputText","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","errorMessage","infoMessage","status","setStatusAC","infoMessageAC","errorMessageAC","isAuth","avatar","errorText","isRedirect","setIsLoggedInAC","setErrorTextAC","text","setIsRedirectAC","getAuthUserDataTC","payload","Login","setEmail","setRememberMe","isLoggedIn","recoverPassword","PROFILE","flexMainContainer","flexMain","answerServer","checkCont","forgot","PASSWORD_RECOVERY","REGISTRATION","errorPassMessage","passwordStatus","errorPassMessageAC","setServerStatusAC","NewPassword","history","useHistory","setNewPassword","newPassword2","setNewPassword2","useParams","push","contentMain","newPasswordTC","Profile","useEffect","RecoverPassword","changeEmailAC","recoverPasswordTC","Error404","logo","title","InitialState","tableProducts","items","settingsSearch","minPrice","maxPrice","productTotalCount","SET_SEARCH_NAME","SET_MIN_MAX_ITEM","SET_PAGE_COUNT","SET_TOTAL_COUNT","SET_SORT","actionsSearch","newPage","newPageCount","cardPacks","getPacksTC","getStore","search","packs","cardPacksTotalCount","Modal","enableBackground","backgroundOnClick","modalOnClick","show","background","modal","ModalQuestion","modalName","onButtonModal","setShow","setAnswer","onKeyPressHandler","buttonsQuestion","autoFocus","buttonQuestion","onKeyDown","ModalUpdatePack","buttonTrue","buttonFalse","setUpdate","setTrue","setFalse","inputsUpdate","buttonsUpdate","buttonUpdate","Pack","pack","packDate","userName","setName","user_name","tableBody","tableBody_name","tableBody_cardsCount","cardsCount","tableBody_updated","tableBody_user","tableBody_buttons","updatePackTC","CARDS","TRAIN","MultiRangeSlider","store","values","setValues","setGlobalValues","newValues","step","renderTrack","props","onMouseDown","onTouchStart","height","display","width","margin","ref","borderRadius","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","position","top","fontWeight","fontSize","fontFamily","padding","toFixed","SearchTable","searchTable","inputSearch","Pagination","getPage","paginationStyle","buttonStyle","selectStyle","pages","lastPage","Math","ceil","i","undefined","filter","p","minHeight","flexDirection","Number","marginRight","marginLeft","SortModule","arrayData","btnArrow","setBtnArrow","btnStyle","border","cursor","sortItem","x","sortIcon","Packs","wait","setWait","newPacks","map","date","Date","updated","toLocaleDateString","table","tableHeader","tableHeader_packsName","tableHeader_cardsCount","tableHeader_updated","tableHeader_user","tableHeader_buttonAdd","addPackTC","cards","packUserId","cardsTotalCount","getCardTC","updateGradeCardTC","setCardsGradeAC","ModalUpdateCards","onChange2","Card","userId","setQuestion","user_id","mainWrapper","buttons","deleteCardTC","updateCardTC","Cards","redirect","setRedirect","newCards","c","tableHeader_buttonAddCard","addCardTC","getRandomCard","sum","reduce","acc","rand","random","newSum","TrainPage","isChecked","setIsChecked","first","setFirst","rating","shots","created","comments","setCard","contantMain","buttonsCont","g","PACKS","HOME_PAGE","NEW_PASSWORD","TEST_COMPONENT","ERROR_404","SEARCH_TABLE","Routes","exact","path","render","Header","header","ModalUp","speed","handleScroll","window","pageYOffset","addEventListener","modalUp","lastState","innerTimer","setInterval","clearInterval","scroll","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.916a7843.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInBlock\":\"Registration_checkInBlock__2rhHs\",\"checkMain\":\"Registration_checkMain__14ojv\",\"help\":\"Registration_help__1gL9x\",\"preloader\":\"Registration_preloader__3rcr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"login_flexMainContainer__3JKz3\",\"flexMain\":\"login_flexMain__CDxC2\",\"forgot\":\"login_forgot__6Ygds\",\"error\":\"login_error__32su-\",\"preloader\":\"login_preloader__1x2u6\",\"answerServer\":\"login_answerServer__2aBTw\",\"checkCont\":\"login_checkCont__12Gjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableBody\":\"pack_tableBody__2pDzk\",\"tableBody_name\":\"pack_tableBody_name__1j3YA\",\"tableBody_cardsCount\":\"pack_tableBody_cardsCount__2bdj7\",\"tableBody_updated\":\"pack_tableBody_updated__3RRiF\",\"tableBody_user\":\"pack_tableBody_user__can0-\",\"tableBody_buttons\":\"pack_tableBody_buttons__2uqdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"card_mainWrapper__1pbfQ\",\"question\":\"card_question__1x6dD\",\"answer\":\"card_answer__CK_45\",\"updated\":\"card_updated__41ond\",\"grade\":\"card_grade__2c61l\",\"buttons\":\"card_buttons__1IjZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"recoverPassword_content__2lwQu\",\"contentMain\":\"recoverPassword_contentMain__UEIVi\",\"error\":\"recoverPassword_error__2R8s8\",\"preloader\":\"recoverPassword_preloader__yxs4I\",\"answerServer\":\"recoverPassword_answerServer__1otOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"trainPage_content__1vGtp\",\"contantMain\":\"trainPage_contantMain__3UjC-\",\"buttonsCont\":\"trainPage_buttonsCont__wFS2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SInp_superInput__UF5dG\",\"errorInput\":\"SInp_errorInput__3yvt0\",\"error\":\"SInp_error__3EQyY\",\"content\":\"SInp_content__et_0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__ZVh8a\",\"errorInput\":\"SuperInputText_errorInput__3-BGJ\",\"error\":\"SuperInputText_error__1oIrx\",\"content\":\"SuperInputText_content__YxiNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"newPassword_content__1J-0S\",\"contentMain\":\"newPassword_contentMain__2BUhD\",\"preloader\":\"newPassword_preloader__3iNQf\",\"answerServer\":\"newPassword_answerServer__1st2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SBtn_default__i5deP\",\"red\":\"SBtn_red__1qxQs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3FtAT\",\"red\":\"SuperButton_red__3lqPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1_sH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"profile_flexMainContainer__2a1aw\",\"avatar\":\"profile_avatar__3m365\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTable\":\"search_searchTable__2Q7jY\",\"inputSearch\":\"search_inputSearch__lJ-y6\",\"tableBlock\":\"search_tableBlock__2rLHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__141_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__PFl8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"modal_content__3GMHI\",\"background\":\"modal_background__2w8Nm\",\"modal\":\"modal_modal__E52k5\",\"modalUp\":\"modal_modalUp__IUInx\",\"buttonsQuestion\":\"modal_buttonsQuestion__bsZl6\",\"buttonQuestion\":\"modal_buttonQuestion__8iIji\",\"buttonsUpdate\":\"modal_buttonsUpdate__3yT4s\",\"buttonUpdate\":\"modal_buttonUpdate__3GTSp\",\"inputsUpdate\":\"modal_inputsUpdate__3CfvS\"};","import axios from 'axios'\r\nimport {LoginParamsType, loginResponseType} from \"../pages/p1-login/bll/loginReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n//http://localhost:7542/2.0/\r\n\r\nexport const commonAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<loginResponseType>(('auth/login'), data)\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/me`)\r\n    },\r\n    authMe() {\r\n        return instance.post<loginResponseType>(`auth/me`) // проверка на залогиненность\r\n    },\r\n    signup(login: string, password: string) {\r\n        return instance.post(`/auth/register/`, {\r\n            'email': login, 'password': password\r\n        })\r\n    },\r\n    recoverPassword(email: string, from: string, message: string) {\r\n        return instance.post<ResponseType>('auth/forgot', {email, from, message});\r\n    },\r\n    changePassword(newPassword: string, token: string | undefined) {\r\n        return instance.post('auth/set-new-password', {password: newPassword, resetPasswordToken: token})\r\n    },\r\n\r\n    //packs\r\n\r\n    getPacks(min: number, max: number, searchName: string, page?: number, pageCount?: number, sortProducts?: string) {\r\n        return instance.get<getPacksResponseType>(`cards/pack?`\r\n            + (max ? `min=${min}&max=${max}&` : '')\r\n            + (searchName.length > 0 ? `packName=${searchName}&` : '')\r\n            + (page ? `page=${page}&pageCount=${pageCount}&` : '')\r\n            + (sortProducts ? `sortProducts=${sortProducts}&` : ''))\r\n\r\n    },\r\n    addPack(name?: string) {\r\n        return instance.post(`cards/pack`, {cardsPack: {name: name || 'new test pack'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete(`cards/pack?id=${packId}`)\r\n    },\r\n    updatePack(packId: string, name?: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id: packId, name: name || 'no name'}})\r\n    },\r\n\r\n    //cards\r\n\r\n    getCards(packId: string, question?: string, answer?: string, min?: string, max?: string, page?: number, pageCount?: number) {\r\n        return instance.get<GetCardsResponseType>(`cards/card`, {\r\n            params: {\r\n                cardsPack_id: packId,\r\n                cardQuestion: question,\r\n                cardAnswer: answer,\r\n                min,\r\n                max,\r\n                page,\r\n                pageCount\r\n            }\r\n        })\r\n    },\r\n    addCard(id: string, question?: string, answer?: string) {\r\n        return instance.post(`cards/card`, {card: {cardsPack_id: id, question: question, answer: answer}})\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete(`cards/card?id=${cardId}`)\r\n    },\r\n    updateCard(id: string, question?: string, answer?: string) {\r\n        return instance.put(`cards/card`, {card: {_id: id, question: question, answer: answer}})\r\n    },\r\n    updateGrade(grade: number, cardId: string) {\r\n        return instance.put<updateGradeResponseType>(`cards/grade`, {grade, card_id: cardId})\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype ResponseType = {\r\n    info: string\r\n    error: ErrorType\r\n}\r\ntype ErrorType = {\r\n    error: string\r\n    email: string\r\n    emailRegExp: {}\r\n    in: string\r\n}\r\ntype getPacksResponseType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number// количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number// выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type PackType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    question: string\r\n    answer: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    comments: string\r\n}\r\ntype updateGradeResponseType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\nimport {ActionsTypes, RegistrationUserType} from \"./storeRegistration\";\r\n\r\nexport const initialState = {\r\n    id: '1',\r\n    login: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    isSuccess: false,\r\n    rememberMe: false,\r\n    error: false,\r\n    loading: false,\r\n    errorServer: ''\r\n};\r\nconst SET_LOGIN = \"SET_LOGIN\"\r\nconst SET_ERROR = \"SET_ERROR\"\r\nconst SET_ERR_SERV = \"SET_ERR_SERV\"\r\nconst SET_PASSWORD = \"SET_PASSWORD\"\r\nconst SET_REPEAT_PASSWORD = \"SET_REPEAT_PASSWORD\"\r\nconst SET_SUCCESS = \"SET_SUCCESS\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_REMEMBER_ME = \"SET_REMEMBER_ME\"\r\n\r\nexport const registrationReducer = (state: RegistrationUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case  SET_LOGIN: {\r\n            return {\r\n                ...state,\r\n                login: action.login\r\n            };\r\n        }\r\n        case  SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                password: action.password\r\n            };\r\n        }\r\n        case  SET_REPEAT_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                confirmPassword: action.repeatPassword\r\n            };\r\n        }\r\n        case  SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            };\r\n        }\r\n        case  SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n        }\r\n        case  SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        }\r\n        case  SET_ERR_SERV: {\r\n            return {\r\n                ...state,\r\n                errorServer: action.err\r\n            };\r\n        }\r\n        case SET_REMEMBER_ME: {\r\n            return {\r\n                ...state,\r\n                rememberMe: action.rememberMe\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionsRegistrations = {\r\n    setLogin: (login: string) => ({type: SET_LOGIN, login}) as const,\r\n    postPassword: (password: string) => ({type: 'SET_PASSWORD', password}) as const,\r\n    postRepeatPassword: (repeatPassword: string) => ({type: 'SET_REPEAT_PASSWORD', repeatPassword}) as const,\r\n    setSuccess: (isSuccess: boolean) => ({type: 'SET_SUCCESS', isSuccess}) as const,\r\n    setLoading: (loading: boolean) => ({type: 'SET_LOADING', loading}) as const,\r\n    setError: (error: boolean) => ({type: SET_ERROR, error}) as const,\r\n    setErrServ: (err: string) => ({type: SET_ERR_SERV, err}) as const,\r\n    postRememberMe: (rememberMe: boolean) => ({type: 'SET_REMEMBER_ME', rememberMe}) as const,\r\n}\r\n\r\nexport const createUserTC = (login: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        commonAPI.signup(login, password)\r\n            .then(res => {\r\n                dispatch(actionsRegistrations.setLoading(false))\r\n                dispatch(actionsRegistrations.setSuccess(true))\r\n                setTimeout(() => dispatch(actionsRegistrations.setSuccess(false)), 3000)\r\n            })\r\n            .catch(er => {\r\n                console.log(er)\r\n\r\n                dispatch(actionsRegistrations.setErrServ(er.response.data.error))\r\n                setTimeout(() => dispatch(actionsRegistrations.setErrServ('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(actionsRegistrations.setLoading(false))\r\n            })\r\n        /*.catch(er => {\r\n            console.log(er)\r\n            dispatch(actionsRegistrations.setLoading(false))\r\n            dispatch(actionsRegistrations.setErrServ(er.response.data.error))\r\n            setTimeout(() => dispatch(actionsRegistrations.setErrServ('')), 3000)\r\n        })*/\r\n    }\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SBtn.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SBtn: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SBtn;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SInp.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onChangeValue?: (value: string) => void // меняем в стейте на email пользователя\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SInp: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        onChangeValue,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        onChangeValue && onChangeValue(e.currentTarget.value) // меняем в стейте на email пользователя\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SInp;\r\n","export default __webpack_public_path__ + \"static/media/PYh.b3402305.gif\";","import React from 'react'\r\nimport s from './preloader.module.css'\r\nimport nya from './PYh.gif'\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}> {<img src={nya} alt={''}/>} </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useState} from 'react'\r\nimport s from './Registration.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    actionsRegistrations, createUserTC,\r\n} from \"../bll/registrationReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport SBtn from \"./SBtn/SBtn\";\r\nimport SCBox from \"./SCBox/SCBox\";\r\nimport SInp from \"./SInp/SInp\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Registration: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [login, setLogin] = useState('galiale@bk.ru')\r\n    const [password, setPassword] = useState('123456789')\r\n    const [password2, setPassword2] = useState('123456789')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const stateRegistrationIsSuccess = useSelector<AppRootStateType>(state => state.registration.isSuccess)\r\n    const stateRegistrationError = useSelector<AppRootStateType>(state => state.registration.error)\r\n    const errorServer = useSelector<AppRootStateType>(state => state.registration.errorServer)\r\n    const stateLoading = useSelector<AppRootStateType>(state => state.registration.loading)\r\n\r\n    const addUser = () => {\r\n\r\n        if (password !== '' && password2 !== '' && login !== '') {\r\n            if (password === password2) {\r\n                dispatch(createUserTC(login, password))\r\n                dispatch(actionsRegistrations.setLoading(true))\r\n            }\r\n        } else {\r\n            dispatch(actionsRegistrations.setError(true))\r\n            dispatch(actionsRegistrations.setSuccess(false))\r\n        }\r\n    }\r\n    const onLoginChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let login = e.currentTarget.value\r\n        setLogin(login)\r\n    }\r\n\r\n    const onPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let password = e.currentTarget.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const repeatOnPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let repeatPassword = e.currentTarget.value\r\n        setPassword2(repeatPassword)\r\n    }\r\n\r\n    const setRememberMeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let rememberMe = e.currentTarget.checked\r\n        setRememberMe(rememberMe)\r\n    }\r\n\r\n    if (stateRegistrationIsSuccess) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    const errInputLogin = (login === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas = (password === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas2 = (password2 === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    return (\r\n        <div className={s.checkInBlock}>\r\n            <div className={s.preloader}> {stateLoading\r\n                ? <Preloader/>\r\n                : \"\"\r\n            } </div>\r\n            <div className={s.checkMain}>\r\n                <h1 className={s.checkInTitle}>Registration</h1>\r\n                {(stateRegistrationError || errorServer)\r\n                    ? <div style={{color: 'red'}}> {errorServer ? errorServer : \"УПС ошибочка...\"}</div>\r\n                    : stateRegistrationIsSuccess\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>}\r\n                <label>Email:\r\n                    <div className={s.help}>Example: Alex@company.com</div>\r\n                    <SInp\r\n                        error={errInputLogin}\r\n                        value={login}\r\n                        onChange={onLoginChange}\r\n                        type={'email'}\r\n                        placeholder={'Alex@company.com'}/>\r\n                </label>\r\n                <label>Password:\r\n                    <div className={s.help}>Example: Must be between\r\n                        8-20 character </div>\r\n                    <SInp\r\n                        error={errInputPas}\r\n                        value={password}\r\n                        onChange={onPasswordChange}\r\n                        type={'password'}\r\n                        placeholder={'password'}\r\n                    />\r\n                </label>\r\n                <label>Confirm password:\r\n                    <div className={s.help}>Example: Must be between\r\n                        8-20 character </div>\r\n                    <SInp\r\n                        error={errInputPas2}\r\n                        value={password2}\r\n                        onChange={repeatOnPasswordChange}\r\n                        type={'password'}\r\n                        placeholder={'confirm password'}\r\n                    />\r\n                </label>\r\n                <div className={s.checkInBtn}>\r\n                    <SBtn callFunction={addUser}\r\n                          name={'Register'}\r\n                          disabled={!!stateLoading}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    email: null as null || \"\",\r\n    from: \"ai73a@yandex.by\",\r\n  //  message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='https://nataliakirik.github.io/Friday-project/#/new-password/$token$'>link</a></div>`,\r\n    message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='http://localhost:3000/Friday-project#/new-password/$token$'>link</a></div>`, // @@@ необходимо для проверки восстановления пароля @@@\r\n    errorMessage: \"\",\r\n    infoMessage: \"\",\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"recoverPassword/CHANGE_EMAIL\": { // меняет значение email на пользовательский\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"recoverPassword/SET_STATUS\": { // отображает крутилку :)\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"recoverPassword/INFO_MESSAGE\": { // сообщение при успехе :р\r\n            return {...state, infoMessage: action.infoMessage}\r\n        }\r\n        case \"recoverPassword/ERROR_MESSAGE\": { // сообщение при наличии ошибки -_-\r\n            return {...state, errorMessage: action.errorMessage}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const changeEmailAC = (email: string) => ({type: \"recoverPassword/CHANGE_EMAIL\", email} as const);\r\nexport const setStatusAC = (status: boolean) => ({type: \"recoverPassword/SET_STATUS\", status} as const);\r\nexport const infoMessageAC = (infoMessage: string) => ({type: \"recoverPassword/INFO_MESSAGE\", infoMessage} as const);\r\nexport const errorMessageAC = (errorMessage: string) => ({type: \"recoverPassword/ERROR_MESSAGE\", errorMessage} as const);\r\n\r\n// thunks\r\nexport const recoverPasswordTC = (email: string, from: string, message: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(changeEmailAC(email))\r\n        console.log(email)\r\n        dispatch(setStatusAC(true))\r\n        commonAPI.recoverPassword(email, from, message)\r\n            .then((res) => {\r\n                dispatch(infoMessageAC(res.data.info))\r\n                console.log(\"then \" + res.data.info)\r\n                setTimeout(() => dispatch(infoMessageAC('')), 3000)\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorMessageAC(error.response.data.error))\r\n                console.log(\"error \" + error.response.data.error)\r\n                setTimeout(() => dispatch(errorMessageAC('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n// type\r\nexport type sentEmailActionType = ReturnType<typeof changeEmailAC>\r\nexport type setStatusActionType = ReturnType<typeof setStatusAC>\r\nexport type infoMessageActionType = ReturnType<typeof infoMessageAC>\r\nexport type errorMessageActionType = ReturnType<typeof errorMessageAC>\r\n\r\ntype ActionsType = sentEmailActionType | setStatusActionType | infoMessageActionType | errorMessageActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\nimport {setStatusAC, setStatusActionType} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    _id: '',\r\n    isAuth: false,\r\n    avatar: '',\r\n    errorText: '',\r\n    isRedirect: false,\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR-TEXT':\r\n            return {...state, errorText: action.text}\r\n        case 'login/SET-NAME':\r\n            return {...state, name: action.name}\r\n        case 'login/SET-USER-ID':\r\n            return {...state, _id: action._id}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isAuth: action.value}\r\n        case 'login/SET-AVATAR':\r\n            return {...state, avatar: action.avatar}\r\n        case 'login/SET_ME':\r\n            return {...state, ...action.payload}\r\n        case 'login/SET_IS-REDIRECT':\r\n            return {...state, isRedirect: action.isRedirect}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setNameAC = (name: string) => ({type: 'login/SET-NAME', name} as const)\r\nexport const setUserIdAC = (_id: string) => ({type: 'login/SET-USER-ID', _id} as const)\r\nexport const setAvatarAC = (avatar: string) => ({type: 'login/SET-AVATAR', avatar} as const)\r\nexport const setErrorTextAC = (text: string) => ({type: 'login/SET_ERROR-TEXT', text} as const)\r\nexport const setIsRedirectAC = (isRedirect: boolean) => ({type: 'login/SET_IS-REDIRECT', isRedirect} as const)\r\nconst setAuthUserDataAC = (name: string, _id: string, avatar: string, isAuth: boolean) => ({\r\n    type: 'login/SET_ME',\r\n    payload: {name, _id, avatar, isAuth}\r\n} as const)\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.login(data)\r\n        .then((res) => {\r\n                dispatch(setNameAC(res.data.name))\r\n                dispatch(setUserIdAC(res.data._id))\r\n                dispatch(setAvatarAC(res.data.avatar))\r\n                dispatch(setIsLoggedInAC(true))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setErrorTextAC(err.response.data.error))\r\n            setTimeout(() => dispatch(setErrorTextAC('')), 3000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const logOutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.logOut()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const getAuthUserDataTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.authMe()\r\n        .then(res => {\r\n            dispatch(setAuthUserDataAC(res.data.name, res.data._id, res.data.avatar, true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setErrorTextAC(error))\r\n            setTimeout(() => dispatch(setErrorTextAC('')), 3000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n            dispatch(setIsRedirectAC(false))\r\n        })\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type loginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>\r\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>\r\nexport type setIsRedirectACType = ReturnType<typeof setIsRedirectAC>\r\nexport type setNameACType = ReturnType<typeof setNameAC>\r\nexport type setUserIdACType = ReturnType<typeof setUserIdAC>\r\nexport type setAvatarACType = ReturnType<typeof setAvatarAC>\r\nexport type setMeACType = ReturnType<typeof setAuthUserDataAC>\r\ntype ActionsType =\r\n    setIsLoggedInACType\r\n    | setErrorTextACType\r\n    | setIsRedirectACType\r\n    | setNameACType\r\n    | setUserIdACType\r\n    | setAvatarACType\r\n    | setMeACType\r\n    | setStatusActionType\r\n","import React, {useState} from 'react'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport s from './login.module.css'\r\nimport SuperCheckbox from \"../../../components/SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../../app/store';\r\nimport {loginTC} from \"../bll/loginReducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('galiale@bk.ru')\r\n    let [password, setPassword] = useState<string>('123456789')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <div className={s.flexMain}>\r\n                <h1>Login Page</h1>\r\n                <div className={s.answerServer}>{error && <span className={s.error}>{error}</span>}</div>\r\n                <div>Email</div>\r\n                <div>\r\n                    <SuperInputText onChangeText={(value) => {\r\n                        setEmail(value)\r\n                    }}\r\n                                    value={email}/>\r\n                </div>\r\n\r\n                <div>Password</div>\r\n                <div>\r\n                    <SuperInputText type={\"password\"}\r\n                                    value={password}\r\n                                    onChangeText={(value) => {\r\n                                        setPassword(value)\r\n                                    }}/>\r\n                </div>\r\n\r\n                <div className={s.checkCont}>\r\n                    <span>Remember me</span>\r\n                    <SuperCheckbox checked={rememberMe}\r\n                                   onChangeChecked={(value) => {\r\n                                       setRememberMe(value)\r\n                                   }}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <SuperButton onClick={() => {\r\n                        dispatch(loginTC({email, password, rememberMe}))\r\n                    }}\r\n                                 name={\"Sign in\"}\r\n                                 error={error}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.forgot}>\r\n                    <div>\r\n                        <NavLink to={PATH.PASSWORD_RECOVERY}>forgot password?</NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink to={PATH.REGISTRATION}>registration</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    errorPassMessage: \"\",\r\n    passwordStatus: false,\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"newPassword/ERROR_MESSAGE\": {\r\n            return {...state, errorPassMessage: action.errorPassMessage}\r\n        }\r\n        case \"newPassword/SET_PASS_STATUS\": {\r\n            return {...state, passwordStatus: action.passwordStatus}\r\n        }\r\n        case \"newPassword/SET_STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const errorPassMessageAC = (errorPassMessage: string) => ({type: \"newPassword/ERROR_MESSAGE\", errorPassMessage} as const);\r\nexport const setPasswordStatusAC = (passwordStatus: boolean) => ({type: \"newPassword/SET_PASS_STATUS\", passwordStatus} as const);\r\nexport const setServerStatusAC = (status: boolean) => ({type: \"newPassword/SET_STATUS\", status} as const);\r\n\r\n\r\n// thunks\r\nexport const newPasswordTC = (newPassword: string, token: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setServerStatusAC(true))\r\n        console.log(newPassword)\r\n        console.log(token)\r\n        commonAPI.changePassword(newPassword, token)\r\n            .then((res) => {\r\n                dispatch(setPasswordStatusAC(true))\r\n                console.log(\"в then все ок\")\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorPassMessageAC(error.message))\r\n                console.log(\"error \" + error.message)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setServerStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// type\r\nexport type errorPassMessageActionType = ReturnType<typeof errorPassMessageAC>\r\nexport type setPasswordStatusActionType = ReturnType<typeof setPasswordStatusAC>\r\nexport type setServerStatusActionType = ReturnType<typeof setServerStatusAC>\r\n\r\ntype ActionsType = errorPassMessageActionType | setPasswordStatusActionType | setServerStatusActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import React, {useState} from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {errorPassMessageAC, newPasswordTC} from \"../bll/newPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport s from \"./newPassword.module.css\"\r\n\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    const {token} = useParams<{ token: string }>()\r\n    const passwordStatus = useSelector<AppRootStateType, boolean>(state => state.newPassword.passwordStatus)\r\n    const errorPassMessage = useSelector<AppRootStateType, string>(state => state.newPassword.errorPassMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.newPassword.status)\r\n\r\n    const redirectLogin = () => history.push(PATH.LOGIN)\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword = e.currentTarget.value\r\n        setNewPassword(newPassword)\r\n    }\r\n\r\n    const repeatOnChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword2 = e.currentTarget.value\r\n        setNewPassword2(newPassword2)\r\n    }\r\n\r\n    const onChangePassword = () => {\r\n        if (newPassword.length > 7) {\r\n            if (newPassword === newPassword2) {\r\n                dispatch(newPasswordTC(newPassword, token))\r\n            } else {\r\n                (dispatch(errorPassMessageAC(\"Passwords don't match\")))\r\n                setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n            }\r\n        } else {\r\n            dispatch(errorPassMessageAC(\"Password must be 8 or more characters\"))\r\n            setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n        }\r\n    }\r\n\r\n    if (passwordStatus) setTimeout(redirectLogin, 2000)\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <div className={s.contentMain}>\r\n                <h1> NewPassword </h1>\r\n                <div className={s.answerServer}> {errorPassMessage} </div>\r\n                <div> Enter your new password </div>\r\n                <SuperInputText type={'password'} placeholder={'password'} value={newPassword} onChange={onChange}/>\r\n                <div> Repeat your new password </div>\r\n                <SuperInputText type={'password'} placeholder={'password'} value={newPassword2} onChange={repeatOnChange}/>\r\n                <SuperButton name={'New Password'} callFunction={onChangePassword}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {getAuthUserDataTC, logOutTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport s from \"./../profile.module.css\"\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const name = useSelector<AppRootStateType, string>(state => state.login.name)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.login.avatar)\r\n\r\n    const localAvatart = \"https://shutniki.club/wp-content/uploads/2020/01/smeshnye_avatarki_34_17105705.jpg\"\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuth) return\r\n        dispatch(getAuthUserDataTC())\r\n    }, [isAuth, dispatch])\r\n\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            Profile user {name}\r\n            <div>\r\n                <SuperButton name={'log out'} onClick={() => {\r\n                    dispatch(logOutTC())\r\n                }}/>\r\n            </div>\r\n            <div className={s.avatar}>\r\n                <img src={avatar || localAvatart}\r\n                     alt={\"avatar\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from './../recoverPassword.module.css'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoverPasswordTC} from \"../bll/recoverPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const RecoverPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('')\r\n\r\n    const from = useSelector<AppRootStateType, string>(state => state.recoverPassword.from)\r\n    const message = useSelector<AppRootStateType, string>(state => state.recoverPassword.message)\r\n    const info = useSelector<AppRootStateType, string>(state => state.recoverPassword.infoMessage)\r\n    const error = useSelector<AppRootStateType, string>(state => state.recoverPassword.errorMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const recoverPassword = (setEmail: string, from: string, message: string) => {\r\n        dispatch(recoverPasswordTC(setEmail, from, message))\r\n    }\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let email = e.currentTarget.value\r\n        setEmail(email)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}>{ status ? <Preloader/> : \"\" }</div> {/*// крутилка*/}\r\n            <div className={s.contentMain}>\r\n                <div>\r\n                    <h1> Enter your email </h1>\r\n                    <div className={s.answerServer}> {error && <span className={s.error}>{error}</span>}\r\n                        {info && <span>{info}</span>} </div>\r\n                    <SuperInputText type={'text'}\r\n                                    value={email}\r\n                                    onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <SuperButton name={\"Recover password\"}\r\n                                 onClick={() => recoverPassword(email, from, message)}\r\n                                 disabled={status}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cat_standing_animated.7a5695a9.gif\";","import React from \"react\";\r\nimport logo from './cat_standing_animated.gif'\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div style={{\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"40% 40% 20%\",\r\n            \"gridTemplateRows\": \"33% 33% 33%\",\r\n        }}>\r\n            <img style={{\r\n                \"width\": \"32%\",\r\n                \"gridColumn\": \"1/5\",\r\n                \"gridRow\": \"3/2\",\r\n            }} src={logo} alt={\"404 error cat\"}/>\r\n            <h1 style={{\r\n                \"marginBottom\": \"0.5rem\",\r\n                \"color\": \"#e32\",\r\n                \"fontSize\": \"4rem\",\r\n                \"lineHeight\": \"4.15rem\",\r\n                \"gridColumn\": \"2/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }}>Oops.</h1>\r\n            <h2 style={{\r\n                \"gridArea\": \"2 / 2 / 2 / 5\",\r\n                \"color\": \"#e32\",\r\n                \"marginTop\": 0,\r\n            }}>We can't find the page you're looking for.</h2>\r\n            <p style={{\r\n                \"gridArea\": \"3 / 2 / 2 / 3\",\r\n                \"margin\": \"38px 0 0 0\",\r\n            }}>It may have expired, or there could be a typo. Maybe you can find what you need from our homepage.\r\n            </p>\r\n            <button title={'Go to LOGIN PAGE'} onClick={() => <Redirect to={PATH.LOGIN}/>} style={{\r\n                \"gridArea\": \"3 / 2 / 4 / 3\",\r\n                \"fontSize\": \"300%\",\r\n                \"width\": \"85%\",\r\n                \"height\": \"62%\",\r\n            }}><Link style={{\r\n                \"textDecoration\": \"none\",\r\n                \"color\": \"black\",\r\n            }} to=\"/\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</Link>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\n\r\nexport interface IItemsTable {\r\n    id: string;\r\n    itemName: string;\r\n    price: number;\r\n}\r\n\r\nexport interface IItemsSettings {\r\n    minPrice: number;\r\n    maxPrice: number;\r\n    min: number;\r\n    max: number;\r\n\r\n    searchName: string;\r\n    sortProducts: string;\r\n\r\n    productTotalCount: number;\r\n    page: number;\r\n    pageCount: number;\r\n}\r\n\r\nexport interface ITableState {\r\n    tableProducts: {\r\n        items: IItemsTable[];\r\n        settingsSearch: IItemsSettings;\r\n        loading: boolean\r\n    };\r\n}\r\n\r\nexport const InitialState: ITableState = {\r\n    tableProducts: {\r\n        items: [\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1121'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1522'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer12523'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer1224'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1125'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1526'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer12527'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer1228'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1129'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1520'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer125210'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer12211'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer11212'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer15213'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer125214'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer12215'},\r\n        ],\r\n        settingsSearch: {\r\n            minPrice: 0,\r\n            maxPrice: 1000,\r\n            min: 0,\r\n            max: 1000,\r\n\r\n            searchName: '',\r\n\r\n            sortProducts: '',\r\n\r\n            productTotalCount: 10,\r\n            page: 1,\r\n            pageCount: 10,\r\n        },\r\n        loading: false\r\n    },\r\n\r\n};\r\nconst SET_SEARCH_NAME = \"SET_SEARCH_NAME\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_MIN_MAX_ITEM = \"SET_MIN_MAX_ITEM\"\r\nconst SET_PAGE_COUNT = \"SET_PAGE_COUNT\"\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\r\nconst SET_SORT = \"SET_SORT\"\r\n\r\n\r\nexport const searchReducer = (state = InitialState, action: any) => {\r\n    switch (action.type) {\r\n        case  SET_SEARCH_NAME: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch, searchName: action.searchName\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    loading: action.loading\r\n                }\r\n            }\r\n        }\r\n        case SET_MIN_MAX_ITEM: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch, min: action.min, max: action.max\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_PAGE_COUNT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,page: action.newPage, pageCount: action.newPageCount\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,productTotalCount: action.productTotalCount\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,sortProducts: action.sortProducts\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionsSearch = {\r\n    setSearchName: (searchName: string) => ({type: SET_SEARCH_NAME, searchName}) as const,\r\n    setLoading: (loading: boolean) => ({type: SET_LOADING, loading}) as const,\r\n    setMinMax:(min: number, max: number) =>({type:SET_MIN_MAX_ITEM, min, max}) as const,\r\n    setPageCount:(newPage:number , newPageCount: number) =>({type:SET_PAGE_COUNT,newPage, newPageCount}) as const,\r\n    setProductTotalCount:(productTotalCount: number) =>({type:SET_TOTAL_COUNT, productTotalCount}) as const,\r\n    setSort:(sortProducts:string) => ({type: SET_SORT, sortProducts}) as const,\r\n\r\n}\r\n\r\nexport const getSearch = (newPage?: number, newPageCount?: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(actionsSearch.setLoading(true))\r\n        // console.log('helo')\r\n        // tableApi.getTableItems().then(response=>{\r\n        // })\r\n    }\r\n}\r\n","import {commonAPI, PackType} from \"../../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {actionsSearch} from \"../../p8-tableFilter/bll/searchReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {setStatusAC, setStatusActionType} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nexport const initialState = {\r\n    cardPacks: [] as Array<PackType>,\r\n    packId: ''\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case'packs/SET-PACKS':\r\n            return {...state, cardPacks: action.packs}\r\n        case'packs/SET-PACKID':\r\n            return {...state, packId: action.id}\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setPacksAC = (packs: Array<PackType>) => ({type: 'packs/SET-PACKS', packs} as const)\r\nexport const setPackIdAC = (id: string) => ({type: 'packs/SET-PACKID', id} as const)\r\nexport type GetStore = () => AppRootStateType\r\n\r\n//thunk\r\nexport const getPacksTC = (newPage?: number, newPageCount?: number) => (dispatch: Dispatch, getStore: GetStore) => {\r\n    const {min, max, searchName, page, pageCount, sortProducts} = getStore().search.tableProducts.settingsSearch\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.getPacks(min, max, searchName, newPage || page, newPageCount || pageCount, sortProducts)\r\n        .then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(actionsSearch.setProductTotalCount(res.data.cardPacksTotalCount))\r\n        })\r\n        .catch(err => {\r\n            console.log('some err in getPacks');\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const addPackTC = (name?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.addPack(name)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\nexport const deletePackTC = (packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.deletePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (packId: string, name: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.updatePack(packId, name)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = setPacksACType | setStatusActionType | setPackIdACType\r\ntype setPacksACType = ReturnType<typeof setPacksAC>\r\ntype setPackIdACType = ReturnType<typeof setPackIdAC>\r\n\r\n","import React, {ReactNode} from 'react';\r\nimport s from './modal.module.css'\r\n\r\ntype ModalType = {\r\n    enableBackground?: boolean;\r\n    backgroundOnClick?: () => void;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n    children: ReactNode\r\n}\r\n\r\nconst Modal = ({\r\n        enableBackground, backgroundOnClick = () => {},\r\n        modalOnClick = () => {},\r\n        show, children,\r\n    }: ModalType) => {\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {enableBackground && <div className={s.background} onClick={backgroundOnClick} />}\r\n            <div className={s.modal} onClick={modalOnClick}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {KeyboardEvent, useState} from 'react';\r\nimport s from \"./modal.module.css\";\r\nimport Modal from \"./Modal\";\r\n\r\ntype ModalQuestionPropsType = {\r\n    modalName: string\r\n    disabled?: boolean\r\n    onButtonModal: () => void\r\n}\r\n\r\nconst ModalQuestion = ({modalName, disabled, onButtonModal}: ModalQuestionPropsType) => {\r\n    const [show, setShow] = useState(false);\r\n    const [, setAnswer] = useState(false);\r\n\r\n    const setTrue = () => {\r\n        onButtonModal()\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setAnswer(false);\r\n        setShow(false);\r\n    };\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            onButtonModal();\r\n            setShow(false);\r\n        }\r\n        if (e.key === \"Backspace\" || \"Escape\") {\r\n            setAnswer(false);\r\n            setShow(false);\r\n        }\r\n    }\r\n    const title = \"Are you sure you want to?\"\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)} disabled={disabled}>{modalName}</button>\r\n            </div>\r\n            <Modal\r\n                enableBackground\r\n                backgroundOnClick={() => setShow(false)}\r\n                show={show}\r\n\r\n            >\r\n                {title}\r\n                <div className={s.buttonsQuestion}>\r\n                    <input type='button' value='Yes' autoFocus\r\n                           onKeyPress={onKeyPressHandler} onClick={setTrue} className={s.buttonQuestion}/>\r\n                    <input type='button' value='No' autoFocus\r\n                           onKeyDown={onKeyPressHandler} onClick={setFalse} className={s.buttonQuestion}/>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalQuestion;","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport s from \"./modal.module.css\";\r\nimport Modal from \"./Modal\";\r\n\r\n\r\ntype ModalQuestionPropsType = {\r\n    modalName: string\r\n    onButtonModal: (value: string) => void\r\n    onChange?: (name: string) => void\r\n    value: string\r\n    buttonTrue?: string\r\n    buttonFalse?: string\r\n    title?: string\r\n    disabled?: boolean\r\n}\r\n\r\nconst ModalUpdatePack = ({ modalName, onButtonModal, value,\r\n        onChange, buttonTrue, buttonFalse, title, disabled }: ModalQuestionPropsType) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [, setUpdate] = useState(false);\r\n\r\n    const setTrue = (value: string) => {\r\n        onButtonModal(value)\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setUpdate(false);\r\n        setShow(false);\r\n    };\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            setTrue(value)\r\n        }\r\n        if (e.key === \"Escape\") {\r\n            setFalse()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)} disabled={disabled}>{modalName}</button>\r\n            </div>\r\n            <Modal enableBackground backgroundOnClick={() => setShow(false)} show={show}>\r\n                {title ? title : 'question Modal'}\r\n                <div className={s.content}>\r\n                    <div className={s.inputsUpdate}>\r\n                        <input value={value} autoFocus onChange={onChangeCallback}\r\n                               onKeyDown={onKeyPressHandler}/>\r\n                    </div>\r\n                    <div className={s.buttonsUpdate}>\r\n                        <button onClick={() => setTrue(value)} className={s.buttonUpdate}>{buttonTrue || \"Yes\"}</button>\r\n                        <button onClick={setFalse} className={s.buttonUpdate}>{buttonFalse || \"Cancel\"}</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalUpdatePack;","import React, {useState} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../../components/routes/Routes\";\r\nimport {PackType} from \"../../../../api/api\";\r\nimport s from './pack.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ModalQuestion from \"../../../../components/Modals/ModalQuestion\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {deletePackTC, setPackIdAC, updatePackTC} from \"../../bll/packsReducer\";\r\nimport ModalUpdatePack from \"../../../../components/Modals/ModalUpdatePack\";\r\n\r\ntype PackPropsType = {\r\n    pack: PackType\r\n    packDate: string // для нового типа даты\r\n}\r\n\r\nexport const Pack = ({pack, packDate}: PackPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector<AppRootStateType, string>(state => state.login.name)\r\n\r\n    let [name, setName] = useState<string>(pack.name)\r\n    const onChange = (value: string) => {\r\n        setName(value)\r\n    }\r\n\r\n    const onBtnDeletePack = () => {\r\n        dispatch(deletePackTC(pack._id))\r\n    }\r\n    const onBtnUpdatePack = (name: string) => {\r\n        dispatch(updatePackTC(pack._id, name))\r\n    }\r\n\r\n    const disabled = userName !== pack.user_name\r\n\r\n    const onBtnCardsClick = () => {\r\n        dispatch(setPackIdAC(pack._id))\r\n    }\r\n\r\n    return <>\r\n        <div className={s.tableBody}>\r\n            <div className={s.tableBody_name}>{pack.name}</div>\r\n            <div className={s.tableBody_cardsCount}>{pack.cardsCount}</div>\r\n            <div className={s.tableBody_updated}>{packDate}</div>\r\n            <div className={s.tableBody_user}>{pack.user_name}</div>\r\n            <div className={s.tableBody_buttons}>\r\n                <ModalQuestion modalName={\"del\"} onButtonModal={onBtnDeletePack} disabled={disabled}/>\r\n                <ModalUpdatePack modalName={\"update\"} onButtonModal={onBtnUpdatePack}\r\n                                 value={name} onChange={onChange} buttonTrue={\"Update\"} title={'Set new name'}\r\n                                 disabled={disabled}/>\r\n                <button onClick={onBtnCardsClick}><NavLink to={PATH.CARDS}>cards</NavLink></button>\r\n                <button><NavLink to={`${PATH.TRAIN}/${pack._id}`}>train</NavLink></button>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Range, getTrackBackground} from 'react-range';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {actionsSearch} from \"../../bll/searchReducer\";\r\n\r\n\r\nconst MultiRangeSlider: React.FC = () => {\r\n    const {tableProducts} = useSelector((store: AppRootStateType) => store.search);\r\n    const {minPrice, maxPrice} = tableProducts.settingsSearch;\r\n    const [values, setValues] = useState([minPrice, maxPrice]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setGlobalValues = (newValues: number[]) => {\r\n        dispatch(actionsSearch.setMinMax(newValues[0], newValues[1]));\r\n        setValues(newValues);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setGlobalValues([minPrice, maxPrice]);\r\n    }, [minPrice, maxPrice]);\r\n\r\n    return (\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={minPrice}\r\n            max={maxPrice}\r\n            onChange={values => setGlobalValues(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown}\r\n                    onTouchStart={props.onTouchStart}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        width: '90%',\r\n                        margin: '5%',\r\n                    }}\r\n                >\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', '#548BF4', '#ccc'],\r\n                                min: minPrice,\r\n                                max: maxPrice\r\n                            }),\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '12px',\r\n                        width: '12px',\r\n                        borderRadius: '1px',\r\n                        backgroundColor: '#FFF',\r\n\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        display: 'flex',\r\n\r\n                        boxShadow: '0px 2px 6px #AAA',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '-28px',\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '14px',\r\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                            padding: '4px',\r\n                            borderRadius: '4px',\r\n                            backgroundColor: '#548BF4'\r\n                        }}\r\n                    >\r\n                        {values[index].toFixed(0)}\r\n                    </div>\r\n                    <div style={{height: '16px', width: '5px', backgroundColor: isDragged ? '#548BF4' : '#CCC'}}/>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MultiRangeSlider;","import React from 'react';\r\nimport s from './search.module.css'\r\nimport {actionsSearch} from \"../bll/searchReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport MultiRangeSlider from \"./MultiRangeSlider/MultiRangeSlider\";\r\nimport {getPacksTC} from \"../../p3-packs/bll/packsReducer\";\r\n\r\n\r\nconst SearchTable = () => {\r\n    const dispatch = useDispatch()\r\n    const {tableProducts} = useSelector((state: AppRootStateType) => state.search)\r\n    const tableSearch = (searchName: string) => {\r\n        dispatch(actionsSearch.setSearchName(searchName))\r\n    }\r\n\r\n    const getResult = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchTable}>\r\n            <div>\r\n                <input className={s.inputSearch}\r\n                       value={tableProducts.settingsSearch.searchName}\r\n                       onChange={(e) => tableSearch(e.currentTarget.value)} type=\"text\"\r\n                       placeholder={'Введите значение для поиска'}\r\n                />\r\n            </div>\r\n            <div style={{\r\n                width: \"50%\"\r\n            }}><MultiRangeSlider/></div>\r\n            <div>\r\n                <button onClick={getResult}>Поиск (Search)</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SearchTable","import React, {CSSProperties, ReactNode} from 'react';\r\n\r\ninterface IPaginationProps {\r\n    page: number;\r\n    pageCount: number;\r\n    productTotalCount: number;\r\n    getPage: (newPage: number, newPageCount: number) => void;\r\n\r\n    title?: ReactNode;\r\n    paginationStyle?: CSSProperties;\r\n    buttonStyle?: CSSProperties;\r\n    selectStyle?: CSSProperties;\r\n}\r\n\r\nconst Pagination: React.FC<IPaginationProps> = (\r\n    {\r\n        page, pageCount, productTotalCount, getPage,\r\n\r\n        title = 'Pagination ', paginationStyle,\r\n        buttonStyle, selectStyle\r\n    }\r\n) => {\r\n    let pages = [];\r\n    const lastPage = Math.ceil(productTotalCount / pageCount)\r\n\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            style={{background: page === i ? 'rgb(143,143,143)' : undefined,\r\n                    color: page === i ? 'white' : undefined, ...buttonStyle}}\r\n            onClick={() => getPage(i, pageCount)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    if ((page + 4) < lastPage) {\r\n        pages[page + 2] = (\r\n            <span key={page + 3} style={buttonStyle}>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < (page + 3) || i === (lastPage - 1));\r\n    }\r\n    if (page > 5) {\r\n        pages[1] = (\r\n            <span key={2} style={buttonStyle}>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < 2 || i > page - 4);\r\n    }\r\n    const prevPage = () => {\r\n        getPage(page - 1, pageCount);\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    }\r\n    const nextPage = () => {\r\n        getPage(page + 1, pageCount);\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            margin: '0 10px', minHeight: '50px', justifyContent: 'center',\r\n            alignItems: 'center', display: 'flex', ...paginationStyle, flexDirection: 'column'\r\n        }}>\r\n            <div>{title} </div>\r\n\r\n            <div style={{\r\n                display: 'flex'\r\n            }}><select value={pageCount} onChange={e => getPage(page, Number(e.currentTarget.value))}\r\n                       style={{\r\n                           ...selectStyle,\r\n                           marginRight: '5px'\r\n                       }}>\r\n                <option value={4}>4</option>\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button onClick={prevPage}>PREV</button>\r\n                </div>\r\n                {pages}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button onClick={nextPage}>NEXT</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useState} from 'react';\r\nimport {PackType} from \"../../../../api/api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actionsSearch} from \"../../bll/searchReducer\";\r\nimport {getPacksTC} from \"../../../p3-packs/bll/packsReducer\";\r\n\r\ntype SortTypeProps = {\r\n    title: string\r\n    arrayData: Array<PackType>\r\n}\r\n\r\nconst SortModule: React.FC<SortTypeProps> = ({title, arrayData}) => {\r\n    const [btnArrow, setBtnArrow] = useState(0)\r\n    const dispatch = useDispatch();\r\n    const btnStyle = {\r\n        background: 'none',\r\n        border: '1px solid black',\r\n        cursor: 'pointer',\r\n        margin: '0',\r\n        padding: '0'\r\n    }\r\n    const titleStyle = {\r\n        marginRight: '5px',\r\n    }\r\n    const sortItem = (x: number) => {\r\n        setBtnArrow(x)\r\n        dispatch(actionsSearch.setSort(x + 'item'));\r\n        dispatch(getPacksTC())\r\n    }\r\n    const sortIcon = (btnArrow === 0)\r\n        ?  <button style={btnStyle} onClick={() => sortItem(1)}>&#9650;</button>\r\n        :  <button style={btnStyle} onClick={() => sortItem(0)}>&#9660;</button>\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        }}>\r\n            <div style={titleStyle}>{title}</div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column'\r\n            }\r\n            }>\r\n                {sortIcon}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortModule;","import React, {useEffect, useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport s from './table.module.css'\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPackTC, getPacksTC} from \"../bll/packsReducer\";\r\nimport {getAuthUserDataTC, setIsRedirectAC} from \"../../p1-login/bll/loginReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {PackType} from \"../../../api/api\";\r\nimport SearchTable from \"../../p8-tableFilter/ui/SearchTable\";\r\nimport Pagination from \"../../p8-tableFilter/ui/Pagination/Pagination\";\r\nimport {actionsSearch} from \"../../p8-tableFilter/bll/searchReducer\";\r\nimport SortModule from \"../../p8-tableFilter/ui/SortModule/SortModule\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport ModalUpdateContainer from \"../../../components/Modals/ModalUpdatePack\";\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const isRedirect = useSelector<AppRootStateType, boolean>(state => state.login.isRedirect)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.cardPacks)\r\n    const errorText = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n  //  let [redirect, setRedirect] = useState<boolean>(false) // перенести на другую страницу\r\n    let [wait, setWait] = useState<boolean>(true) // показать ошибку\r\n    let [name, setName] = useState<string>('')\r\n\r\n    const {\r\n        page,\r\n        pageCount,\r\n        productTotalCount\r\n    } = useSelector((state: AppRootStateType) => state.search.tableProducts.settingsSearch)\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getPacksTC())\r\n            setWait(false)\r\n            return\r\n        } else {\r\n            setTimeout(() => dispatch(setIsRedirectAC(true)), 2500)\r\n        }\r\n        dispatch(getAuthUserDataTC())\r\n    }, [isAuth, dispatch])\r\n\r\n  //  if (!isAuth) setTimeout(() => setRedirect(true), 2000);\r\n    /*if (redirect) return <Redirect to={PATH.LOGIN}/>*/\r\n    if (isRedirect) return <Redirect to={PATH.LOGIN}/>\r\n    if (wait) return <div className={s.errorText}> {errorText} </div>\r\n\r\n    const newPacks = packs.map((p) => {\r\n        const date = (new Date(p.updated)).toLocaleDateString() //возможность менять тип даты\r\n        return <Pack key={p._id} pack={p} packDate={date}/>\r\n    })\r\n\r\n    const onChange = (value: string) => {\r\n        setName(value)\r\n    }\r\n\r\n    const getPage = (newPage: number, newPageCount: number) => {\r\n        dispatch(actionsSearch.setPageCount(newPage, newPageCount))\r\n        dispatch(getPacksTC(newPage, newPageCount))\r\n    };\r\n\r\n    const onBtnAddPack = (name: string) => {\r\n        dispatch(addPackTC(name))\r\n        setName('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            {/*// крутилка*/}\r\n            <h3>Packs page</h3>\r\n            <SearchTable/>\r\n            table\r\n            <div className={s.table}>\r\n                <div className={s.tableHeader}>\r\n                    <div className={s.tableHeader_packsName}>Name</div>\r\n                    <div className={s.tableHeader_cardsCount}><SortModule arrayData={packs} title={'CardsCount'}/></div>\r\n                    <div className={s.tableHeader_updated}>Updated</div>\r\n                    <div className={s.tableHeader_user}>User Name</div>\r\n                    <div className={s.tableHeader_buttonAdd}>\r\n                        <ModalUpdateContainer modalName={'add'} onButtonModal={onBtnAddPack}\r\n                                              value={name} onChange={onChange}\r\n                                              title={'Enter pack name'} buttonTrue={'Enter'}/>\r\n                    </div>\r\n                </div>\r\n                {newPacks}\r\n                <div style={{\r\n                    width: '100%'\r\n                }}><Pagination page={page} pageCount={pageCount} productTotalCount={productTotalCount}\r\n                               getPage={getPage}/></div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {CardType, commonAPI} from \"../../../api/api\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    packUserId: '',\r\n    cardsTotalCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    error: ''\r\n}\r\n\r\nexport const cardsReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/SET-CARDS': {\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                packUserId: action.packUserId,\r\n                page: action.page,\r\n                cardsTotalCount: action.cardsTotalCount,\r\n                pageCount: action.pageCount\r\n            }\r\n        }\r\n        case 'CARDS/SET-CARDS_GRADE': {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(c => c._id === action.cardId ? {...c, grade: action.grade} : c)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\n\r\nexport const setCardsAC = (cards: Array<CardType>, packUserId: string,\r\n                           page: number, cardsTotalCount: number, pageCount: number) =>\r\n    ({type: 'CARDS/SET-CARDS', cards, packUserId, page, cardsTotalCount, pageCount} as const)\r\n\r\nexport const setCardsGradeAC = (grade: number, cardId: string) => ({\r\n    type: 'CARDS/SET-CARDS_GRADE',\r\n    grade,\r\n    cardId\r\n} as const)\r\n\r\n\r\n//thunk\r\n\r\nexport const getCardTC = (packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.getCards(packId)\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch(setCardsAC(res.data.cards, res.data.packUserId, res.data.page, res.data.cardsTotalCount, res.data.pageCount))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const addCardTC = (packId: string, question?: string, answer?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.addCard(packId, question, answer)\r\n        .then(() => {\r\n\r\n            dispatch(getCardTC(packId))\r\n\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const deleteCardTC = (packId: string, cardId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.deleteCard(cardId)\r\n        .then(() => {\r\n            dispatch(getCardTC(packId))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (packId: string, cardId: string, question?: string, answer?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.updateCard(cardId, question, answer)\r\n        .then(() => {\r\n            dispatch(getCardTC(packId))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updateGradeCardTC = (cardId: string, grade: number, packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.updateGrade(grade, cardId)\r\n        .then(({data}) => {\r\n            dispatch(setCardsGradeAC(data.grade, data.card_id))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\n\r\n//types\r\nexport type initialStateType = typeof initialState\r\nexport type ActionsType =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCardsGradeAC>\r\n\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport s from \"./modal.module.css\";\r\nimport Modal from \"./Modal\";\r\n\r\n\r\ntype ModalQuestionPropsType = {\r\n    modalName: string\r\n    onButtonModal: (value: string, value2?: string) => void\r\n    onChange?: (question: string) => void\r\n    onChange2?: (answer: string) => void\r\n    question: string\r\n    answer: string\r\n    buttonTrue?: string\r\n    buttonFalse?: string\r\n    title?: string\r\n    disabled?: boolean\r\n}\r\n\r\nconst ModalUpdateCards = (\r\n    { modalName, onButtonModal, question, answer,\r\n        onChange, onChange2, buttonTrue, buttonFalse, title, disabled\r\n    }: ModalQuestionPropsType) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [, setUpdate] = useState(false);\r\n\r\n    const setTrue = (question: string, answer: string) => {\r\n        onButtonModal(question, answer)\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setUpdate(false);\r\n        setShow(false);\r\n    };\r\n    const onChangeQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e.currentTarget.value);\r\n    }\r\n    const onChangeAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange2 && onChange2(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            setTrue(question, answer)\r\n        }\r\n        if (e.key === \"Escape\") {\r\n            setFalse()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)} disabled={disabled}>{modalName}</button>\r\n            </div>\r\n            <Modal enableBackground backgroundOnClick={() => setShow(false)} show={show}>\r\n                {title ? title : 'question and answer Modal'}\r\n                <div className={s.content}>\r\n                    <div className={s.inputsUpdate}>\r\n                        <input value={question} autoFocus onChange={onChangeQuestion} onKeyDown={onKeyPressHandler}/>\r\n                        <input value={answer} onChange={onChangeAnswer} onKeyDown={onKeyPressHandler}/>\r\n                    </div>\r\n                    <div className={s.buttonsUpdate}>\r\n                        <button onClick={() => setTrue(question, answer)} className={s.buttonUpdate}>{buttonTrue || \"Yes\"}</button>\r\n                        <button onClick={setFalse} className={s.buttonUpdate}>{buttonFalse || \"Cancel\"}</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalUpdateCards;","import s from './card.module.css'\r\nimport React, {useState} from \"react\";\r\nimport {CardType} from \"../../../api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {deleteCardTC, updateCardTC} from \"../bll/cardsReducer\";\r\nimport ModalQuestion from \"../../../components/Modals/ModalQuestion\";\r\nimport ModalUpdateCards from \"../../../components/Modals/ModalUpdateCards\";\r\n\r\ntype CardPropsType = {\r\n    card: CardType\r\n}\r\n\r\nexport const Card = ({card}: CardPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const packId = useSelector<AppRootStateType, string>(state => state.packs.packId)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.login._id)\r\n\r\n    let [question, setQuestion] = useState<string>(card.question)\r\n    let [answer, setAnswer] = useState<string>(card.answer)\r\n    const onChangeQuestion = (value: string) => {\r\n        setQuestion(value)\r\n    }\r\n    const onChangeAnswer = (value: string) => {\r\n        setAnswer(value)\r\n    }\r\n\r\n    const onBtnDeleteCard = () => {\r\n        dispatch(deleteCardTC(packId, card._id))\r\n    }\r\n    const onBtnUpdateCard = (question?: string, answer?: string) => {\r\n        dispatch(updateCardTC(packId, card._id, question, answer))\r\n    }\r\n\r\n    const disabled = userId !== card.user_id\r\n\r\n\r\n    return <>\r\n        <div className={s.mainWrapper}>\r\n            <div className={s.question}>{card.question}</div>\r\n            <div className={s.answer}>{card.answer}</div>\r\n            <div className={s.grade}>{card.grade}</div>\r\n            <div className={s.updated}>{card.updated}</div>\r\n            <div className={s.buttons}>\r\n                <ModalQuestion modalName={\"del\"} onButtonModal={onBtnDeleteCard} disabled={disabled}/>\r\n                <ModalUpdateCards modalName={\"update\"} onButtonModal={onBtnUpdateCard}\r\n                                  question={question} answer={answer} onChange={onChangeQuestion}\r\n                                  onChange2={onChangeAnswer} buttonTrue={\"Update\"} title={'Set new question'}\r\n                                  disabled={disabled}/>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport s from \"../../p3-packs/ui/table.module.css\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport SearchTable from \"../../p8-tableFilter/ui/SearchTable\";\r\nimport Pagination from \"../../p8-tableFilter/ui/Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Card} from \"../card/Card\";\r\nimport {CardType} from \"../../../api/api\";\r\nimport {addCardTC, getCardTC} from \"../bll/cardsReducer\";\r\nimport ModalUpdateCards from \"../../../components/Modals/ModalUpdateCards\";\r\nimport {getAuthUserDataTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const errorText = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n    const packId = useSelector<AppRootStateType, string>(state => state.packs.packId)\r\n    let [redirect, setRedirect] = useState<boolean>(false) // перенести на другую страницу\r\n    let [wait, setWait] = useState<boolean>(true) // показать ошибку\r\n    let [question, setQuestion] = useState<string>('')\r\n    let [answer, setAnswer] = useState<string>('')\r\n\r\n    const newCards = cards.map((c) => {\r\n        return <Card key={c._id} card={c}/>\r\n    })\r\n\r\n    const onChangeQuestion = (value: string) => {\r\n        setQuestion(value)\r\n    }\r\n    const onChangeAnswer = (value: string) => {\r\n        setAnswer(value)\r\n    }\r\n\r\n    const onBtnAddCard = (question: string, answer?: string) => {\r\n        dispatch(addCardTC(packId, question, answer))\r\n        setQuestion('')\r\n        setAnswer('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getCardTC(packId))\r\n            setWait(false)\r\n            return\r\n        } else {\r\n            setTimeout(() => setRedirect(true), 2000);\r\n        }\r\n        dispatch(getAuthUserDataTC())\r\n    }, [isAuth, packId, dispatch])\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>\r\n    if (wait) return <div className={s.errorText}> {errorText} </div>\r\n\r\n    return (\r\n        <>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <SearchTable/>\r\n            table\r\n            <div className={s.table}>\r\n                <div className={s.tableHeader}>\r\n                    <div className={s.tableHeader_packsName}>question</div>\r\n                    <div className={s.tableHeader_user}>answer</div>\r\n                    <div className={s.tableHeader_cardsCount}>grade</div>\r\n                    <div className={s.tableHeader_updated}>updated</div>\r\n                    <div className={s.tableHeader_buttonAdd}>\r\n                        <div className={s.tableHeader_buttonAddCard}>\r\n                            <ModalUpdateCards modalName={'add'} onButtonModal={onBtnAddCard} question={question}\r\n                                              answer={answer} onChange={onChangeQuestion}\r\n                                              onChange2={onChangeAnswer}\r\n                                              title={'Enter new card'} buttonTrue={'Enter'}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {newCards}\r\n            </div>\r\n            <Pagination page={19} pageCount={12} productTotalCount={30}\r\n                        getPage={() => {\r\n                            'getpage'\r\n                        }}/>\r\n\r\n        </>\r\n    )\r\n}","import {CardType} from \"../../api/api\";\r\n\r\nexport const getRandomCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport {getCardTC, updateGradeCardTC} from \"../p3-cards/bll/cardsReducer\";\r\nimport {getRandomCard} from \"../../components/functions/getRandomCard\";\r\nimport {PATH} from \"../../components/routes/Routes\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport s from \"./trainPage.module.css\"\r\n\r\nexport const TrainPage = () => {\r\n    const grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n    const {packId} = useParams<Record<string, string>>();\r\n\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        question: 'Question?',\r\n        answer: 'Answer',\r\n        cardsPack_id: 'cardsPack_id',\r\n        grade: 0,\r\n        rating: 0,\r\n        shots: 0,\r\n        type: '',\r\n        user_id: 'user_id',\r\n        created: '',\r\n        updated: '',\r\n        comments: 'comments'\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(getCardTC(packId));\r\n            setFirst(false);\r\n        }\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getRandomCard(cards));\r\n\r\n    }, [dispatch, packId, cards, first]);\r\n\r\n    const onNext = () => {\r\n        dispatch(updateGradeCardTC(card._id, 5, packId))\r\n        setCard(getRandomCard(cards));\r\n        setIsChecked(false);\r\n    }\r\n    const onGradeBtnClick = (grade: number) => {\r\n        dispatch(updateGradeCardTC(card._id, grade, packId))\r\n        setCard(getRandomCard(cards));\r\n        setIsChecked(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <h3>TrainPage</h3>\r\n            <div className={s.contantMain}>\r\n                <div>{card.question}</div>\r\n                {isChecked && (<div>{card.answer}</div>)}\r\n                <div className={s.buttonsCont}>\r\n                    <button onClick={() => setIsChecked(true)}>show answer</button>\r\n                </div>\r\n                <div className={s.buttonsCont}>\r\n                    {grades.map((g, i) => (\r\n                        <button key={'grade-' + i} onClick={() => {\r\n                            onGradeBtnClick(i + 1)\r\n                        }}>{g}</button>\r\n                    ))}\r\n                </div>\r\n                <div className={s.buttonsCont}>\r\n                    <button><NavLink to={PATH.PACKS}>cancel</NavLink></button>\r\n                    <button onClick={onNext}>next</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Registration} from \"../../pages/p2-registration/ui/Registration\";\r\nimport {Login} from \"../../pages/p1-login/ui/Login\";\r\nimport {NewPassword} from \"../../pages/p6-newPassword/ui/NewPassword\";\r\nimport {Profile} from \"../../pages/p3-profile/ui/Profile\";\r\nimport {RecoverPassword} from \"../../pages/p5-recoverPassword/ui/RecoverPassword\";\r\nimport {Error404} from \"../../pages/p4-404/ui/Error404\";\r\nimport {Packs} from \"../../pages/p3-packs/ui/Packs\";\r\nimport {Cards} from \"../../pages/p3-cards/ui/Cards\";\r\nimport SearchTable from \"../../pages/p8-tableFilter/ui/SearchTable\";\r\nimport {TrainPage} from \"../../pages/p9-learnPage/TrainPage\";\r\n\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: '/',\r\n    LOGIN: '/login',\r\n    NEW_PASSWORD: '/new-password/:token',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/recover_password',\r\n    TEST_COMPONENT: '/testComponent',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards',\r\n    ERROR_404: '/404',\r\n    SEARCH_TABLE: '/search_table',\r\n    TRAIN: '/train',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route exact path={['/', PATH.LOGIN]} render={() => <Login/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route exact path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route exact path={PATH.PASSWORD_RECOVERY} render={() => <RecoverPassword/>}/>\r\n                <Route exact path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route exact path={`${PATH.CARDS}/:packId?`} render={() => <Cards/>}/>\r\n                <Route exact path={PATH.SEARCH_TABLE} render={() => <SearchTable/>}/>\r\n                <Route exact path={`${PATH.TRAIN}/:packId?`} render={() => <TrainPage/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../routes/Routes'\r\nimport s from './header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.REGISTRATION}>Registration</NavLink>\r\n            <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD}>New password</NavLink>\r\n            <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY}>Recover password</NavLink>\r\n            <NavLink to={PATH.PACKS}>Packs</NavLink>\r\n            <NavLink to={PATH.CARDS}>Cards</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport s from \"./modal.module.css\";\r\n\r\ntype ModalUpType = {\r\n    speed: number // 1 - fast; 100 - slow\r\n}\r\n\r\nconst ModalUp = ({speed}: ModalUpType) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.pageYOffset / speed;\r\n        let lastState = window.pageYOffset;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.pageYOffset) clearInterval(innerTimer);\r\n            lastState = window.pageYOffset;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.pageYOffset === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className={s.modalUp} onClick={scroll}>\r\n            UP\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalUp;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Routes} from \"../components/routes/Routes\";\r\nimport {Header} from \"../components/header/Header\";\r\nimport {getAuthUserDataTC} from \"../pages/p1-login/bll/loginReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport ModalUp from \"../components/Modals/ModalUp\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector<AppRootStateType, string>(state => state.login._id)\r\n\r\n    console.log(userId)\r\n    useEffect(() => {\r\n        dispatch(getAuthUserDataTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n                <ModalUp speed={10}/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {}\r\nexport const profileReducer = (state= initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../pages/p1-login/bll/loginReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {registrationReducer} from \"../pages/p2-registration/bll/registrationReducer\";\r\nimport {profileReducer} from \"../pages/p3-profile/bll/profileReducer\";\r\nimport {recoverPasswordReducer} from \"../pages/p5-recoverPassword/bll/recoverPasswordReducer\";\r\nimport {newPasswordReducer} from \"../pages/p6-newPassword/bll/newPasswordReducer\";\r\nimport {searchReducer} from \"../pages/p8-tableFilter/bll/searchReducer\";\r\nimport {packsReducer} from \"../pages/p3-packs/bll/packsReducer\";\r\nimport {cardsReducer} from \"../pages/p3-cards/bll/cardsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    search: searchReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\n\r\n// test\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"table_errorText__3idrL\",\"preloader\":\"table_preloader__P3YQt\",\"table\":\"table_table__1nwM2\",\"tableHeader\":\"table_tableHeader__3o5Zw\",\"tableHeader_packsName\":\"table_tableHeader_packsName__ZIE3O\",\"tableHeader_cardsCount\":\"table_tableHeader_cardsCount__2ZjOi\",\"tableHeader_updated\":\"table_tableHeader_updated__2pWj_\",\"tableHeader_user\":\"table_tableHeader_user__3RiYD\",\"tableHeader_buttonAdd\":\"table_tableHeader_buttonAdd__3xEAo\",\"tableHeader_buttonAddCard\":\"table_tableHeader_buttonAddCard__3a8HQ\"};"],"sourceRoot":""}